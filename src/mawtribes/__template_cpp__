/*
 * Warhammer Age of Sigmar battle simulator.
 *
 * Copyright (C) 2019 by Rick Weyrauch - rpweyrauch@gmail.com
 *
 * This code is licensed under the MIT license (MIT) (http://opensource.org/licenses/MIT)
 */
#include <UnitFactory.h>
#include "mawtribes/<UnitName>.h"

namespace OgorMawtribes
{
static FactoryMethod factoryMethod = {
    <UnitName>::Create,
    <UnitName>::ValueToString,
    <UnitName>::EnumStringToInt,
    {
    },
    DESTRUCTION,
    OGOR_MAWTRIBES
};

bool <UnitName>::s_registered = false;

Unit *<UnitName>::Create(const ParameterList &parameters)
{
    auto unit = new <UnitName>();

    bool ok = unit->configure();
    if (!ok)
    {
        delete unit;
        unit = nullptr;
    }
    return unit;
}

std::string <UnitName>::ValueToString(const Parameter &parameter)
{
    return MawtribesBase::ValueToString(parameter);
}

int <UnitName>::EnumStringToInt(const std::string &enumString)
{
    return MawtribesBase::EnumStringToInt(enumString);
}

void <UnitName>::Init()
{
    if (!s_registered)
    {
        s_registered = UnitFactory::Register("<UnitName>", factoryMethod);
    }
}

<UnitName>::<UnitName>() :
    MawtribesBase("<UnitName>", MOVE, WOUNDS, BRAVERY, SAVE, false)
{

}

bool <UnitName>::configure()
{
    return false;
}

void <UnitName>::visitWeapons(std::function<void(const Weapon &)> &visitor)
{

}

} // namespace OgorMawtribes
